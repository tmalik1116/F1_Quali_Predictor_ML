{"mappings":";;;;;;;;;;;;;;;ACGA,SAAS,mCAAa,KAAK;IACvB,qBACI,gCAAC;QAAI,WAAU;kBACX,cAAA,gCAAC;YAAO,SAAS,IAAM,MAAM,aAAa,CAAC;YAAW,IAAG;YAAgB,WAAU;sBAAc;;;AAG7G;AAEA,SAAS,oCAAc,KAAK;IACxB,qBACI,gCAAC;QAAI,WAAU;kBACX,cAAA,gCAAC;YAAO,SAAS,IAAM,MAAM,aAAa,CAAC;YAAY,IAAG;YAAiB,WAAU;sBAAc;;;AAG/G;AAEA,SAAS,8BAAQ,KAAK;IAElB,qBACI,gCAAC;QAAI,IAAG;QAAe,WAAW,CAAC,aAAa,EAAE,MAAM,MAAM,GAAG,WAAW,GAAG,CAAC;kBAC5E,cAAA,iCAAC;YAAI,WAAU;;gBACV,MAAM,IAAI,KAAK,0BAEZ,gCAAC;8BACG,cAAA,gCAAC;kCAAG;;;gBAMX,MAAM,IAAI,KAAK,2BAEZ,gCAAC;8BACG,cAAA,gCAAC;kCAAG;;;;;;AAS5B;AAEA,SAAS;IAEL,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qBAAO,EAAE,OAAO,0CAA0C;IAChG,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qBAAO,EAAE;IAEnD,MAAM,gBAAgB,CAAC;QACnB,QAAQ,GAAG,CAAC,yBAAyB,2BAA2B;QAEhE,IAAI,gBAAgB,QAAQ,eACxB,iBAAiB,QAAQ,oDAAoD;aAC1E;YACH,eAAe,OAAO,kBAAkB;YACxC,iBAAiB,OAAO,eAAe;QAC3C;IACJ;IAEF,qBACE,iCAAC;QAAI,WAAU;;0BACX,gCAAC;gBAAI,WAAU;;0BAGf,iCAAC;gBAAI,WAAU;;kCACX,gCAAC;wBAAG,WAAU;kCAAY;;kCAC1B,gCAAC;wBAAE,OAAO;4BAAE,WAAW;4BAAM,cAAc;wBAAM;kCAAG;;kCAEpD,iCAAC;wBAAI,WAAU;;0CACX,gCAAC;gCAAa,eAAe;;0CAC7B,gCAAC;gCAAc,eAAe;;;;kCAGlC,gCAAC;wBAAQ,MAAM;wBAAa,QAAQ;;;;0BAExC,gCAAC;gBAAI,WAAU;;;;AAGvB;IAEA,2CAAe;;;;AD/Ef,MAAM,6BAAO,CAAA,GAAA,+CAAO,EAAE,UAAU,CAAC,SAAS,cAAc,CAAC,UAAU,sCAAsC;AAEzG,2BAAK,MAAM,eAAC,gCAAC,CAAA,GAAA,wCAAE","sources":["src/index.js","src/App.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"../build/static/styles.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")); // Target the 'root' div in index.html\n\nroot.render(<App />);\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom/client';\n\nfunction DriverButton(props) {\n    return (\n        <div className=\"col-6\"> \n            <button onClick={() => props.toggleSubmenu('driver')} id=\"driver-button\" className=\"main button\">Driver</button> \n        </div>\n    )\n}\n\nfunction SessionButton(props) {\n    return (\n        <div className=\"col-6\">\n            <button onClick={() => props.toggleSubmenu('session')} id=\"session-button\" className=\"main button\">Session</button> \n        </div>\n    )\n}\n\nfunction Submenu(props) {\n    \n    return (\n        <div id=\"submenu-card\" className={`submenu-card ${props.isOpen ? 'active' : ''}`}> \n            <div className=\"submenu-content\">\n                {props.type === 'driver' && (\n\n                    <div>\n                        <h1>Driver Menu</h1>\n                    </div>\n                    // put driver UI here \n                    // INPUT: driver, track, year\n                    // OUTPUT: predicted qualifying time\n                )}\n                {props.type === 'session' && (\n\n                    <div>\n                        <h1>Session Menu</h1>\n                    </div>\n                    // put session UI here\n                    // INPUT: track, year, weather (optional)\n                    // OUTPUT: predicted qualifying grid - times and positions\n                )}\n            </div>\n        </div>\n    )\n}\n\nfunction App(){\n\n    const [submenuType, setSubmenuType] = useState(null); // state for submenu type (driver/session)\n    const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n\n    const toggleSubmenu = (type) => {\n        console.log(\"toggleSubmenu called\"); // not working, investigate\n        \n        if (submenuType === type && isSubmenuOpen) {\n            setIsSubmenuOpen(false); // close submenu if the same button is clicked again\n        } else {\n            setSubmenuType(type); // update the type\n            setIsSubmenuOpen(true); // open submenu\n        }\n    };\n    \n  return (\n    <div className=\"App\">\n        <div className=\"curb left\"></div>\n\n\n        <div className=\"content\">\n            <h1 className=\"display-1\">Formula 1 Qualif-AI</h1>\n            <p style={{ marginTop: '5%', marginBottom: '10%' }}>Predict Result For:</p>\n\n            <div className=\"row\">\n                <DriverButton toggleSubmenu={toggleSubmenu} />\n                <SessionButton toggleSubmenu={toggleSubmenu} />\n            </div>\n\n            <Submenu type={submenuType} isOpen={isSubmenuOpen}/>\n        </div>\n        <div className=\"curb right\"></div>\n    </div>\n  );\n}\n\nexport default App;"],"names":[],"version":3,"file":"main.js.map"}